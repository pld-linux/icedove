--- firefox-2.0+0dfsg.orig/extensions/spellcheck/myspell/src/Makefile.in
+++ firefox-2.0+0dfsg/extensions/spellcheck/myspell/src/Makefile.in
@@ -60,15 +60,18 @@
 		  xulapp \
 		  $(NULL)
 
-CPPSRCS =         affentry.cpp \
+CPPSRCS =         mozMySpell.cpp \
+		  mozMySpellFactory.cpp \
+                  $(NULL)
+ifndef MOZ_NATIVE_MYSPELL
+CPPSRCS +=	  affentry.cpp \
 		  affixmgr.cpp \
 		  hashmgr.cpp \
 		  suggestmgr.cpp \
 		  csutil.cpp \
 		  myspell.cpp \
-		  mozMySpell.cpp \
-		  mozMySpellFactory.cpp \
                   $(NULL)
+endif
 
 ifdef MOZ_XUL_APP
 CPPSRCS += mozMySpellDirProvider.cpp
@@ -79,6 +82,7 @@
 		$(XPCOM_LIBS) \
 		$(NSPR_LIBS) \
 		$(MOZ_UNICHARUTIL_LIBS) \
+		$(MOZ_MYSPELL_LIBS) \
 		$(NULL)
 
 include $(topsrcdir)/config/rules.mk
--- firefox-2.0+0dfsg.orig/configure
+++ firefox-2.0+0dfsg/configure
@@ -60,6 +60,8 @@
   --with-system-png[=PFX]
                           Use system libpng [installed at prefix PFX]"
 ac_help="$ac_help
+  --enable-system-myspell   Use system myspell (located with pkgconfig)"
+ac_help="$ac_help
   --with-java-include-path=dir   Location of Java SDK headers"
 ac_help="$ac_help
   --with-java-bin-path=dir   Location of Java binaries (java, javac, jar)"
@@ -12011,6 +11953,116 @@
 
 fi # SKIP_LIBRARY_CHECKS
 
+# Check whether --enable-system-myspell or --disable-system-myspell was given.
+if test "${enable_system_myspell+set}" = set; then
+  enableval="$enable_system_myspell"
+  if test "$enableval" = "yes"; then
+    SYSTEM_MYSPELL=1 
+  elif test "$enableval" = "no"; then
+    :
+  else
+    { echo "configure: error: Option, system-myspell, does not take an argument ($enableval)." 1>&2; exit 1; }
+  fi
+fi
+
+
+if test -n "$SYSTEM_MYSPELL"; then
+    
+  succeeded=no
+
+  if test -z "$PKG_CONFIG"; then
+    # Extract the first word of "pkg-config", so it can be a program name with args.
+set dummy pkg-config; ac_word=$2
+echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
+echo "configure:11978: checking for $ac_word" >&5
+if eval "test \"`echo '$''{'ac_cv_path_PKG_CONFIG'+set}'`\" = set"; then
+  echo $ac_n "(cached) $ac_c" 1>&6
+else
+  case "$PKG_CONFIG" in
+  /*)
+  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  ?:/*)			 
+  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a dos path.
+  ;;
+  *)
+  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
+  ac_dummy="$PATH"
+  for ac_dir in $ac_dummy; do 
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/$ac_word; then
+      ac_cv_path_PKG_CONFIG="$ac_dir/$ac_word"
+      break
+    fi
+  done
+  IFS="$ac_save_ifs"
+  test -z "$ac_cv_path_PKG_CONFIG" && ac_cv_path_PKG_CONFIG="no"
+  ;;
+esac
+fi
+PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
+if test -n "$PKG_CONFIG"; then
+  echo "$ac_t""$PKG_CONFIG" 1>&6
+else
+  echo "$ac_t""no" 1>&6
+fi
+
+  fi
+
+  if test "$PKG_CONFIG" = "no" ; then
+     echo "*** The pkg-config script could not be found. Make sure it is"
+     echo "*** in your path, or set the PKG_CONFIG environment variable"
+     echo "*** to the full path to pkg-config."
+     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
+  else
+     PKG_CONFIG_MIN_VERSION=0.9.0
+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
+        echo $ac_n "checking for myspell""... $ac_c" 1>&6
+echo "configure:12022: checking for myspell" >&5
+
+        if $PKG_CONFIG --exists "myspell" ; then
+            echo "$ac_t""yes" 1>&6
+            succeeded=yes
+
+            echo $ac_n "checking MOZ_MYSPELL_CFLAGS""... $ac_c" 1>&6
+echo "configure:12029: checking MOZ_MYSPELL_CFLAGS" >&5
+            MOZ_MYSPELL_CFLAGS=`$PKG_CONFIG --cflags "myspell"`
+            echo "$ac_t""$MOZ_MYSPELL_CFLAGS" 1>&6
+
+            echo $ac_n "checking MOZ_MYSPELL_LIBS""... $ac_c" 1>&6
+echo "configure:12034: checking MOZ_MYSPELL_LIBS" >&5
+            ## don't use --libs since that can do evil things like add
+            ## -Wl,--export-dynamic
+            MOZ_MYSPELL_LIBS="`$PKG_CONFIG --libs-only-L \"myspell\"` `$PKG_CONFIG --libs-only-l \"myspell\"`"
+            echo "$ac_t""$MOZ_MYSPELL_LIBS" 1>&6
+        else
+            MOZ_MYSPELL_CFLAGS=""
+            MOZ_MYSPELL_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            MOZ_MYSPELL_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "myspell"`
+            echo $MOZ_MYSPELL_PKG_ERRORS
+        fi
+
+        
+        
+     else
+        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
+        echo "*** See http://www.freedesktop.org/software/pkgconfig"
+     fi
+  fi
+
+  if test $succeeded = yes; then
+     :
+  else
+     { echo "configure: error: Library requirements (myspell) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." 1>&2; exit 1; }
+  fi
+
+fi
+
+
+
+
 JAVA_INCLUDE_PATH=
 # Check whether --with-java-include-path or --without-java-include-path was given.
 if test "${with_java_include_path+set}" = set; then
@@ -20291,10 +20347,13 @@
 s%@NSS_CONFIG@%$NSS_CONFIG%g
 s%@NSS_CFLAGS@%$NSS_CFLAGS%g
 s%@NSS_LIBS@%$NSS_LIBS%g
+s%@PKG_CONFIG@%$PKG_CONFIG%g
+s%@MOZ_MYSPELL_CFLAGS@%$MOZ_MYSPELL_CFLAGS%g
+s%@MOZ_MYSPELL_LIBS@%$MOZ_MYSPELL_LIBS%g
+s%@SYSTEM_MYSPELL@%$SYSTEM_MYSPELL%g
 s%@GTK_CONFIG@%$GTK_CONFIG%g
 s%@GTK_CFLAGS@%$GTK_CFLAGS%g
 s%@GTK_LIBS@%$GTK_LIBS%g
-s%@PKG_CONFIG@%$PKG_CONFIG%g
 s%@MOZ_GTK2_CFLAGS@%$MOZ_GTK2_CFLAGS%g
 s%@MOZ_GTK2_LIBS@%$MOZ_GTK2_LIBS%g
 s%@HOST_MOC@%$HOST_MOC%g
--- firefox-2.0+0dfsg.orig/configure.in
+++ firefox-2.0+0dfsg/configure.in
@@ -3840,6 +3870,19 @@
 
 fi # SKIP_LIBRARY_CHECKS
 
+dnl system MySpell Support
+dnl ========================================================
+MOZ_ARG_ENABLE_BOOL(system-myspell,
+[  --enable-system-myspell   Use system myspell (located with pkgconfig)],
+    SYSTEM_MYSPELL=1 )
+
+if test -n "$SYSTEM_MYSPELL"; then
+    PKG_CHECK_MODULES(MOZ_MYSPELL, myspell)
+fi
+
+AC_SUBST(SYSTEM_MYSPELL)
+AC_SUBST(MOZ_MYSPELL_LIBS)
+
 dnl ========================================================
 dnl Java SDK support
 dnl ========================================================
--- firefox-2.0+0dfsg.orig/config/autoconf.mk.in
+++ firefox-2.0+0dfsg/config/autoconf.mk.in
@@ -190,6 +190,9 @@
 NECKO_SMALL_BUFFERS = @NECKO_SMALL_BUFFERS@
 NECKO_COOKIES = @NECKO_COOKIES@
 
+MOZ_NATIVE_MYSPELL = @SYSTEM_MYSPELL@
+MOZ_MYSPELL_LIBS = @MOZ_MYSPELL_LIBS@
+
 MOZ_NATIVE_ZLIB	= @SYSTEM_ZLIB@
 MOZ_NATIVE_JPEG	= @SYSTEM_JPEG@
 MOZ_NATIVE_PNG	= @SYSTEM_PNG@
--- mozilla/mailnews/compose/resources/content/MsgComposeCommands.js~	2006-12-31 00:16:49.000000000 +0200
+++ mozilla/mailnews/compose/resources/content/MsgComposeCommands.js	2007-03-05 04:35:59.280678222 +0200
@@ -2154,6 +2154,10 @@
     {
       langId = dictList[i];
       isoStrArray = dictList[i].split("-");
+      // if we can't split by Mozilla locale names (en-US), try system separator (en_US)
+      if (isoStrArray.length < 2) {
+        isoStrArray = dictList[i].split("_");
+      }
 
       if (languageBundle && isoStrArray[0])
         langLabel = languageBundle.getString(isoStrArray[0].toLowerCase());
--- mozilla/mail/components/compose/content/MsgComposeCommands.js~	2007-01-16 02:37:55.000000000 +0200
+++ mozilla/mail/components/compose/content/MsgComposeCommands.js	2007-03-05 04:37:41.320669980 +0200
@@ -2235,6 +2235,10 @@
     {
       langId = dictList[i];
       isoStrArray = dictList[i].split("-");
+      // if we can't split by Mozilla locale names (en-US), try system separator (en_US)
+      if (isoStrArray.length < 2) {
+        isoStrArray = dictList[i].split("_");
+      }
 
       if (languageBundle && isoStrArray[0])
         langLabel = languageBundle.getString(isoStrArray[0].toLowerCase());
--- mozilla/mail/components/preferences/compose.js~	2006-11-28 03:06:50.000000000 +0200
+++ mozilla/mail/components/preferences/compose.js	2007-03-05 04:39:00.815779020 +0200
@@ -337,6 +337,10 @@
       try {
         langId = dictList[i];
         isoStrArray = dictList[i].split("-");
+        // if we can't split by Mozilla locale names (en-US), try system separator (en_US)
+        if (isoStrArray.length < 2) {
+          isoStrArray = dictList[i].split("_");
+        }
 
         if (languageBundle && isoStrArray[0])
           langLabel = languageBundle.getString(isoStrArray[0].toLowerCase());
